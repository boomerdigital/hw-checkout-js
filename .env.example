# Environment Configuration Template
# Copy this file to .env.staging (default) or .env.production based on your environment
# Usage: npm run deploy (uses .env.staging) or npm run deploy -- --env=production

PORT=8080
MODE=replay

# BigCommerce API Configuration
# Get these from your BigCommerce store's API settings
ACCESS_TOKEN=your_bigcommerce_api_token_here
CLIENT_NAME=Custom-checkout
CLIENT_ID=your_bigcommerce_client_id_here
CLIENT_SECRET=your_bigcommerce_client_secret_here

# Store Configuration
# STAGING: 5ytm98vliq (bmstaging.mybigcommerce.com)
# PRODUCTION: 83ivwebri3 (www.handcuffwarehouse.com)
STORE_HASH=your_store_hash_here
API_PATH=https://api.bigcommerce.com/stores/your_store_hash_here/v3/

# Upload Configuration
# Update these URLs based on your target environment
CHECKOUT_UPLOAD_URL=https://your-store-domain.com/content/checkout/
CHECKOUT_LOADER_URL=https://your-store-domain.com/content/checkout/auto-loader.js

# Lambda API Configuration
# STAGING: https://yx1041xohb.execute-api.us-east-2.amazonaws.com/Prod/
# PRODUCTION: https://your-production-lambda-endpoint/Prod/
API_URL=your_lambda_api_endpoint_here
API_CLIENT_ID=bzhkzdt0f7vrrg92o4iym8rxvd872qj

# Instructions:
# 1. Copy this file to .env for staging or .env.production for production
# 2. Replace all placeholder values with your actual configuration
# 3. Never commit files containing real API keys or secrets
# 4. Use the deploy script: npm run deploy -- --env=production
